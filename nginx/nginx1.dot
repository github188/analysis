digraph nginx {
    node [
        shape = "record",
    ];

    rankdir = LR;

    // ngx_cached_time
    n_ngx_cached_time [label = "ngx_time_t : *ngx_cached_time"];

    // cached_time[64]
    subgraph cluster_cached_time_array {
        label = "ngx_time_t : cached_time[64]";
        
        n_cached_time_array [label = "<0>cached_time[0] | \
                                         <f>... | \
                                         <slot>cached_time[slot] | \
                                         <b>... | \
                                         <63>cached_time[63]"];
        n_cached_time_ngx_time_t [label = "<sec>time_t : sec | \
                                           <msec>ngx_uint_t : msec | \
                                           <gmtoff>ngx_int_t : gmtoff"];

        n_cached_time_array:slot -> n_cached_time_ngx_time_t:sec [
            style = "dotted",
        ];
        n_cached_time_array:slot -> n_cached_time_ngx_time_t:gmtoff [
            style = "dotted",
        ];
    };

    // ngx_log_file
    subgraph cluster_ngx_log_file {
        label = "ngx_open_file_t : ngx_log_file";

        n_ngx_log_file [label = "<fd>ngx_fd_t : fd | \
                                 <name>ngx_str_t : name | \
                                 <buffer>u_char : *buffer | \
                                 <pos>u_char : *pos | \
                                 <last>u_char : *last"];
    };

    // ngx_log
    subgraph cluster_ngx_log {
        label = "ngx_lot_t : ngx_log";

        n_ngx_log [label = "<log_level>ngx_uint_t : log_level | \
                            <file>ngx_open_file_t : *file | \
                            <connection>ngx_atomic_uint_t : connection | \
                            <handler>ngx_log_handler_pt : handler | \
                            <data>void : *data | \
                            <action>char : *action"];
    };

    // ngx_cycle
    n_ngx_cycle [label = "ngx_cyle_t : *ngx_cycle"];

    // init_cycle
    subgraph cluster_init_cycle {
        label = "ngx_cycle_t : init_cycle";

        n_init_cycle [label = "<conf_ctx>void : ****conf_ctx | \
                               <pool>ngx_pool_t : *pool | \
                               <log>ngx_log_t : *log | \
                               <new_log>ngx_log_t : new_log | \
                               ... | \
                               <hostname>ngx_str_t : hostname"];
    };

    // anonymity_cyle
    n_anonymity_cycle [label = "<conf_ctx>void : ****conf_ctx | \
                                <pool>ngx_pool_t : *pool | \
                                <log>ngx_log_t : *log | \
                                <new_log>ngx_log_t : new_log | \
                                ... | \
                                <pathes>ngx_array_t : pathes | \
                                ... | \
                                <old_cycle>ngx_cycle_t : *old_cycle | \
                                ... | \
                                <hostname>ngx_str_t : hostname"];
    n_anonymity_cycle_pathes [label = "<elts>void : *elts | \
                                       <nelts>ngx_uint_t : nelts | \
                                       <size>size_t : size | \
                                       <nalloc>ngx_uint_t : nalloc | \
                                       <pool>ngx_pool_t : *pool"];
    n_anonymity_cycle:pathes -> n_anonymity_cycle_pathes:elts [
        style = "dotted",
    ];
    n_anonymity_cycle:pathes -> n_anonymity_cycle_pathes:pool [
        style = "dotted",
    ];

    // ********** relationship **********
    n_ngx_cached_time -> n_cached_time_array:slot;

    n_ngx_log:file -> n_ngx_log_file:fd;

    n_init_cycle:log -> n_ngx_log:log_level;
    n_ngx_cycle -> n_anonymity_cycle:conf_ctx;
    n_anonymity_cycle:log -> n_ngx_log:log_level;
    n_anonymity_cycle:old_cycle -> n_init_cycle:conf_ctx;
};
